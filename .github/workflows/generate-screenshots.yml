name: "Generate | Screenshots"
on:
  issue_comment:
    types: [created]

jobs:
  add-reaction:
    name: "[Reaction] ðŸš€"
    if: github.event.issue.pull_request != '' && contains(github.event.comment.body, '/generate-screenshots')
    runs-on: ubuntu-latest
    steps:
      - name: add reaction to PR
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            })

            const body = `
              [Generating new screenshots](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body,
            });

  start-runner:
    name: "[Runner] start ec2 instance"
    needs: [add-reaction]
    uses: ledgerhq/actions/.github/workflows/start-linux-runner.yml@main
    with:
      instance-type: c5.4xlarge
    secrets:
      CI_BOT_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

  stop-runner:
    name: "[Runner] stop ec2 instance"
    if: always() && github.event.issue.pull_request != ''
    needs: [start-runner, generate-screenshots-linux]
    uses: ledgerhq/actions/.github/workflows/stop-linux-runner.yml@main
    with:
      label: ${{ needs.start-runner.outputs.label }}
      ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
    secrets:
      CI_BOT_TOKEN: ${{ secrets.CI_BOT_TOKEN }}

  generate-screenshots-linux:
    name: "[Linux] Screenshots"
    needs: [start-runner]
    runs-on: ${{ needs.start-runner.outputs.label }}

    steps:
      - name: prepare runner
        run: |
          sudo growpart /dev/nvme0n1 1
          sudo resize2fs /dev/nvme0n1p1
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: kill apt-get
        run: sudo killall -w apt-get apt || echo OK
      - name: install gh
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y gh
      - name: checkout PR
        run: gh pr checkout ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: install yarn
        run: npm i -g yarn
      - name: install dependencies
        run: yarn --frozen-lockfile --network-timeout 100000
        env:
          JOBS: max
      - name: install operating system dependencies
        run: npx playwright install-deps
      - name: build electron app
        run: yarn build
      - name: generate new screenshots (Linux)
        run: xvfb-run --auto-servernum -- yarn playwright-update-snapshots --retries 0
      - name: status
        id: status
        run: echo "::set-output name=status::$(git status --porcelain | wc -l)"
      - name: commit
        if: steps.status.outputs.status != 0
        run: |
          git add .
          git commit -m 'update screenshots (linux)'
          git pull --rebase
          git push

  generate-screenshots:
    needs: [add-reaction]
    name: "[${{ matrix.os }}] Screenshots"
    strategy:
      fail-fast: false
      matrix:
        # os: [macos-latest, windows-latest]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: checkout PR
        run: gh pr checkout ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: install yarn
        run: npm i -g yarn
      - name: install dependencies
        run: yarn --frozen-lockfile --network-timeout 100000
        env:
          JOBS: max
      - name: install operating system dependencies
        run: npx playwright install-deps
      - name: build electron app
        run: yarn build
      - name: generate new screenshots (${{ matrix.os }})
        run: yarn playwright-update-snapshots --retries 0
      - name: status
        id: status
        run: echo "::set-output name=status::$(git status --porcelain | wc -l)"
      - name: commit
        if: steps.status.outputs.status != 0
        run: |
          git add .
          git commit -m 'update screenshots (${{ matrix.os }})'
          git pull --rebase
          git push
