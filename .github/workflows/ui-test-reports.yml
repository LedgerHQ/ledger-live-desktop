name: "[REPORT] Screenshot Testing Reports"
on:
  workflow_dispatch:
    inputs:
      runId:
        description: run id
        required: true

  workflow_run:
    workflows: ["[TESTS] Screenshot Testing"]
    types:
      - "completed"

jobs:
  comment-on-pr:
    # if: github.event.workflow_run.event == 'pull_request'
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     os: [ubuntu-20.04, macos-latest, windows-latest]
    #     os: [ubuntu-20.04, windows-latest]
    runs-on: ubuntu-20.04
    steps:
      - name: download artifacts
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var fs = require('fs');
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id || github.event.inputs.runId }},
            });

            var reportArtifacts = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "tests-reports"
            })[0];

            var playwrightArtifacts = artifacts.data.artifacts.filter((artifact) => {
              return (
                artifact.name == "playwright-results-windows-latest" ||
                artifact.name === "playwright-results-linux"
              );
            });

            var downloadReport = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: reportArtifacts.id,
               archive_format: 'zip',
            });

            var pPWArtifacts = await Promise.all(
              playwrightArtifacts.map((artifact) => {
                return github.actions.downloadArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id,
                  archive_format: "zip",
                });
              })
            );

            pPWArtifacts.forEach((artifact, i) => {
              fs.writeFileSync(
                "${{github.workspace}}/" + playwrightArtifacts[i].name + ".zip",
                Buffer.from(artifact.data)
              )
            })

            fs.writeFileSync(
              "${{github.workspace}}/" + reportArtifacts.name + ".zip",
              Buffer.from(downloadReport.data)
            )

      - name: unzip stuff
        run: |
          unzip tests-reports.zip
          unzip playwright-results-windows-latest.zip
          unzip playwright-results-linux.zip
      - name: ls on files
        run: ls
