name: bundle app
on: [pull_request]

jobs:
  bundle-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: 12.x
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: setup macos dependencies
        run: brew cask install xquartz
      - name: get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: install dependencies
        run: yarn --ignore-scripts --frozen-lockfile
      - uses: "./.github/actions/get-package-infos"
        id: version
      - uses: "./.github/actions/get-pr-number"
        id: pr
      - name: make local version
        run: yarn version --new-version=${{ steps.version.outputs.clean }}-pr.${{ steps.pr.outputs.pr }}
      - name: build the app
        run: yarn nightly
      - uses: "./.github/actions/get-package-infos"
        id: post-version
      - name: upload macOS app
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.post-version.outputs.version }}-mac.dmg
          path: dist/${{ steps.post-version.outputs.name }}-${{ steps.post-version.outputs.version }}-mac.dmg
      - name: run xquartz
        run: |
          /opt/X11/bin/startx
          /opt/X11/bin/Xvfb :99 -ac -screen 0 1024x768x8
      - name: spectron
        run: yarn jest tests/specs/onboarding.spec.js
        env:
          CI: true

  bundle-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: 12.x
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: install linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libudev-dev libusb-1.0-0-dev xvfb
      - name: get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: install dependencies
        run: yarn --ignore-scripts --frozen-lockfile
      - uses: "./.github/actions/get-package-infos"
        id: version
      - uses: "./.github/actions/get-pr-number"
        id: pr
      - name: make local version
        run: yarn version --new-version=${{ steps.version.outputs.clean }}-pr.${{ steps.pr.outputs.pr }}
      - name: build the app
        run: yarn nightly
      - uses: "./.github/actions/get-package-infos"
        id: post-version
      - name: upload linux app
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.post-version.outputs.version }}-linux-x86_64.AppImage
          path: dist/${{ steps.post-version.outputs.name }}-${{ steps.post-version.outputs.version }}-linux-x86_64.AppImage
      # - name: run spectron with xvfb
      #   run: |
      #     xvfb-run --auto-servernum yarn jest tests/specs/onboarding.spec.js
      #   env:
      #     CI: true
      # - name: Cleanup xvfb pidx
      #   uses: bcomnes/cleanup-xvfb@v1
  # bundle-windows:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-node@master
  #       with:
  #         node-version: 12.x
  #     - uses: actions/setup-python@v1
  #       with:
  #         python-version: "2.7.x"
  #     - name: set git user
  #       run: |
  #         git config user.email "team-live@ledger.fr"
  #         git config user.name "Team Live"
  #     - name: get yarn cache
  #       id: yarn-cache
  #       run: echo "::set-output name=dir::$(yarn cache dir)"
  #     - uses: actions/cache@v1
  #       with:
  #         path: ${{ steps.yarn-cache.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - name: install dependencies
  #       run: yarn --ignore-scripts --frozen-lockfile
  #     - uses: "./.github/actions/get-package-infos"
  #       id: version
  #     - uses: "./.github/actions/get-pr-number"
  #       id: pr
  #     - name: make local version
  #       run: yarn version --new-version=${{ steps.version.outputs.clean }}-pr.${{ steps.pr.outputs.pr }}
  #     - name: build the app
  #       run: yarn nightly
  #     - uses: "./.github/actions/get-package-infos"
  #       id: post-version
  #     - name: upload windows
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: ${{ steps.post-version.outputs.version }}-win.exe
  #         path: dist/${{ steps.post-version.outputs.name }}-${{ steps.post-version.outputs.version }}-win.exe
