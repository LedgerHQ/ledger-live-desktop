name: bundle app
on:
  pull_request_target:
    branches:
      - "*"
  push:
    branches:
      - develop
      - master

jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
  bundle-macos:
    runs-on: macos-latest
    needs: cancel-previous
    steps:
      - uses: ledgerhq/actions/check-member@v2.0.0
        with:
          username: ${{ github.actor }}
          ban: ledgerlive
        if: github.event_name == 'pull_request'
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: actions/setup-node@main
        with:
          node-version: 12.x
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: install dependencies
        run: yarn --ignore-scripts --frozen-lockfile
      - uses: ledgerhq/actions/get-package-infos@v1.0.0
        id: version
      - name: set beta name
        uses: ./.github/actions/change-product-name
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha8::${GITHUB_SHA:0:7}"
      - name: make local version
        env:
          VERSION: ${{ steps.version.outputs.clean }}-sha.${{ steps.slug.outputs.sha8 }}
        run: yarn version --new-version="$VERSION"
      - name: build the app
        run: yarn nightly
      - uses: ledgerhq/actions/get-package-infos@v1.0.0
        id: post-version
      - name: upload macOS app
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.post-version.outputs.version }}-mac.dmg
          path: dist/${{ steps.post-version.outputs.name }}-${{ steps.post-version.outputs.version }}-mac.dmg

  bundle-linux:
    runs-on: ubuntu-latest
    needs: cancel-previous
    steps:
      - uses: ledgerhq/actions/check-member@v1.0.0
        with:
          username: ${{ github.actor }}
          ban: ledgerlive
        if: github.event_name == 'pull_request'
      - uses: actions/checkout@v2
      - uses: actions/setup-node@main
        with:
          node-version: 12.x
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: install linux dependencies
        run: sudo apt-get update && sudo apt-get install libudev-dev libusb-1.0-0-dev
      - name: get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: install dependencies
        run: yarn --ignore-scripts --frozen-lockfile
      - uses: ledgerhq/actions/get-package-infos@v1.0.0
        id: version
      - name: set beta name
        uses: ./.github/actions/change-product-name
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha8::${GITHUB_SHA:0:7}"
      - name: make local version
        env:
          VERSION: ${{ steps.version.outputs.clean }}-sha.${{ steps.slug.outputs.sha8 }}
        run: yarn version --new-version="$VERSION"
      - name: build the app
        run: yarn nightly
      - uses: ledgerhq/actions/get-package-infos@v1.0.0
        id: post-version
      - name: upload linux app
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.post-version.outputs.version }}-linux-x86_64.AppImage
          path: dist/${{ steps.post-version.outputs.name }}-${{ steps.post-version.outputs.version }}-linux-x86_64.AppImage

  bundle-windows:
    runs-on: windows-latest
    needs: cancel-previous
    steps:
      - uses: ledgerhq/actions/check-member@v2.0.0
        with:
          username: ${{ github.actor }}
          ban: ledgerlive
        if: github.event_name == 'pull_request'
      - uses: actions/checkout@v2
      - uses: actions/setup-node@main
        with:
          node-version: 12.x
      - uses: actions/setup-python@v1
        with:
          python-version: "2.7.x"
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: install dependencies
        run: yarn --ignore-scripts --frozen-lockfile
      - uses: ledgerhq/actions/get-package-infos@v2.0.0
        id: version
      - name: set beta name
        uses: ./.github/actions/change-product-name
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha8::$(git rev-parse --short HEAD)"
      - name: make local version
        env:
          VERSION: ${{ steps.version.outputs.clean }}-sha.${{ steps.slug.outputs.sha8 }}
        run: yarn version --new-version="$VERSION"
      - name: build the app
        run: yarn nightly
      - uses: ledgerhq/actions/get-package-infos@v2.0.0
        id: post-version
      - name: upload windows
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.post-version.outputs.version }}-win.exe
          path: dist/${{ steps.post-version.outputs.name }}-${{ steps.post-version.outputs.version }}-win.exe
