name: CI
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - develop
      - master

jobs:
  type-checking:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: actions/setup-node@main
        with:
          node-version: 12.x
      - name: get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: install dependencies
        run: yarn --frozen-lockfile
      - name: run code checks
        run: yarn ci 2>lint.txt
      - name: Read lint output
        id: lint
        if: always()
        uses: juliangruber/read-file-action@v1
        with:
          path: ./lint.txt
      - name: check build
        run: sudo yarn build
      - name: start electron webdriver
        run: yarn start-electron-webdriver -d
      - uses: nev7n/wait_for_response@v1
        with:
          url: 'http://localhost:9515/'
          responseCode: 404
          timeout: 600000
          interval: 1000
      - name: run spectron
        run: yarn spectron --no-color 2>output.txt
      - name: Read test output
        id: spectron
        if: always()
        uses: juliangruber/read-file-action@v1
        with:
          path: ./output.txt
      - name: upload diffs to imgur
        if: always()
        uses: ./.github/actions/upload-images
        id: imgur
        with:
          path: tests/specs/__image_snapshots__/__diff_output__
      - name: prepare comment body
        if: always()
        id: comment
        uses: ./.github/actions/prepare-comment-body
        with:
          images: ${{ steps.imgur.outputs.images }}
      - name: post comment
        if: github.event_name == 'pull_request' && always()
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            ## Lint outputs
            <details>
            <summary>View</summary>
            <p>
            
            ${{ steps.lint.outputs.content }}
            
            </p>
            </details>

            ## Tests outputs
            <details>
            <summary>View</summary>
            <p>
            
            ${{ steps.spectron.outputs.content }}
            
            </p>
            </details>

            ## Diff output
            <details>
            <summary>View</summary>
            <p>
            
            ${{ steps.comment.outputs.body }}
            
            </p>
            </details>
          allow-repeats: true
          repo-token: ${{ secrets.CI_BOT_TOKEN }}
          repo-token-user-login: ${{ secrets.CI_BOT_USERNAME }}
