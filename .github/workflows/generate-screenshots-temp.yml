name: Generate Screenshots Test
on:
  workflow_dispatch:
    inputs:
      number:
        description: PR to checkout
        required: true

jobs:
  cancel-previous:
    runs-on: ubuntu-20.04
    steps:
      - name: Cancel Previous Runs
        run: curl -i -L -X GET 'https://github-actions-live.ledger.tools/api/cancel-previous-run?runId=${{ github.run_id }}&owner=LedgerHQ&repo=ledger-live-desktop&branch=${{ github.event.pull_request.head.ref }}&headSha=${{ github.event.pull_request.head.sha }}'

  start-runner:
    name: start self-hosted EC2 runner
    needs: cancel-previous
    runs-on: [ledger-live-desktop]
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: get latest LLD runner AMI id
        id: get-ami-id
        run: |
          echo "::set-output name=ami-id::$(aws ec2 describe-images  --filters 'Name=name,Values=ledger-live-runner' --query 'Images[*].ImageId' --output text)"
      - name: start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          ec2-image-id: ${{ steps.get-ami-id.outputs.ami-id }}
          ec2-instance-type: c5.4xlarge
          subnet-id: subnet-03b7b4dff904e0142 # production-shared-private-eu-west-1a
          security-group-id: sg-010daba499648d1e7 # infra-gha-runner-sg
      - name: get volume-id
        id: get-volume-id
        run: |
          echo "::set-output name=volume-id::$(aws ec2 describe-instances --instance-ids ${{ steps.start-ec2-runner.outputs.ec2-instance-id }} --query 'Reservations[*].Instances[*].BlockDeviceMappings[*].Ebs.VolumeId' --output text)"
      - name: resize rootfs
        env:
          VOLUME_ID: ${{ steps.get-volume-id.outputs.volume-id }}
        run: |
          aws ec2 modify-volume --size 30 --volume-id $VOLUME_ID

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs: [start-runner, generate-screenshots-linux]
    runs-on: [ledger-live-desktop]
    if: ${{ always() }}
    steps:
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.CI_BOT_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}

  generate-screenshots-linux:
    name: screenshots linux
    needs: [start-runner]
    runs-on: ${{ needs.start-runner.outputs.label }}

    steps:
      - name: prepare runner
        run: |
          sudo growpart /dev/nvme0n1 1
          sudo resize2fs /dev/nvme0n1p1
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: kill apt-get
        sudo killall apt-get apt || return 0
      - name: install gh
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y gh
      - name: checkout PR
        run: gh pr checkout ${{ github.event.inputs.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: install yarn
        run: npm i -g yarn
      - name: install dependencies
        run: yarn --frozen-lockfile --network-timeout 100000
        env:
          JOBS: max
      - name: install operating system dependencies
        run: npx playwright install-deps
      - name: build electron app
        run: yarn build
      - name: generate new screenshots (Linux)
        run: xvfb-run --auto-servernum -- yarn playwright-update-snapshots --retries 0
      - name: status
        id: status
        run: echo "::set-output name=status::$(git status --porcelain | wc -l)"
      - name: commit
        if: steps.status.outputs.status != 0
        run: |
          git add .
          git commit -m 'update screenshots (Linux)'
          git pull --rebase
          git push

  generate-screenshots:
    name: screenshots
    strategy:
      fail-fast: false
      matrix:
        # os: [macos-latest, windows-latest]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: set git user
        run: |
          git config user.email "team-live@ledger.fr"
          git config user.name "Team Live"
      - name: checkout PR
        run: gh pr checkout ${{ github.event.inputs.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: install operating system dependencies
        run: npx playwright install-deps
      - name: install dependencies
        env:
          JOBS: max
        run: yarn --frozen-lockfile --network-timeout 100000
      - name: build electron app
        run: yarn build
      - name: generate new screenshots (${{ matrix.os }})
        run: yarn playwright-update-snapshots --retries 0
        env:
          DEBUG: pw:browser
      - name: status
        id: status
        run: echo "::set-output name=status::$(git status --porcelain | wc -l)"
      - name: commit
        if: steps.status.outputs.status != 0
        run: |
          git add .
          git commit -m 'update screenshots (${{ matrix.os }})'
          git pull --rebase
          git push
