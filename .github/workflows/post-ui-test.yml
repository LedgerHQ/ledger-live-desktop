name: CI Report
on:
  workflow_dispatch:
    inputs:
      runId:
        description: run id
        required: true

  workflow_run:
    workflows: ["UI tests"]
    types:
      - "completed"

jobs:
  comment-on-pr:
    # if: github.event.workflow_run.event == 'pull_request'
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     os: [ubuntu-20.04, macos-latest, windows-latest]
    #     os: [ubuntu-20.04, windows-latest]
    runs-on: ubuntu-20.04
    steps:
      - name: download artifacts
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var fs = require('fs');
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id || github.event.inputs.runId }},
            });

            var reportArtifacts = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "tests-reports"
            })[0];

            var playwrightArtifacts = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "playwright-results-windows-latest" || artifact.name === "playwright-results-linux"
            });

            var downloadReport = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: reportArtifacts.id,
               archive_format: 'zip',
            });

            var pwartifacts = []

            playwrightArtifacts.forEach(async artifact => {
              var downloadPlaywright = await github.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
                archive_format: 'zip',
              });

              if (downloadPlaywright) {
                pwartifacts.push(downloadPlaywright)
              }
            })

            fs.writeFileSync('${{github.workspace}}/tests-reports.zip', Buffer.from(downloadReport.data));

            pwartifacts.forEach((a) => {
              fs.writeFileSync('${{github.workspace}}/' + artifact.name + '.zip', Buffer.from(a.data));
            })
      - name: unzip stuff
        run: |
          unzip tests-reports.zip
          unzip playwright-results-windows-latest.zip
      - name: ls on files
        run: ls
